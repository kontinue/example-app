apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  labels:
    service: app
spec:
  replicas: 1
  selector:
    matchLabels:
      service: app
  template:
    metadata:
      labels:
        service: app
    spec:
      serviceAccountName: example-app
      restartPolicy: Always
      containers:
      - image: harbor-repo.vmware.com/tanzu_delivery_pipeline/example-app:latest
        name: app
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          capabilities:
            drop:
            - all
        env:
        - name: REDIS_ADDR
          value: redis:6379
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: app
  name: app
spec:
  ports:
  - name: "8080"
    port: 8080
    targetPort: 8080
  selector:
    service: app
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: example-app
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: example-app-psp
roleRef:
  kind: ClusterRole
  name: psp:vmware-system-restricted
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: example-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: redis
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      service: redis
  strategy: {}
  template:
    metadata:
      labels:
        service: redis
    spec:
      serviceAccountName: example-app
      containers:
      - image: gcr.io/sys-2b0109it/demo/bitnami/redis
        name: redis
        env:
        - name: ALLOW_EMPTY_PASSWORD
          value: "yes"
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          capabilities:
            drop:
            - all
        ports:
        - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: redis
  name: redis
spec:
  ports:
  - name: "6379"
    port: 6379
    targetPort: 6379
  selector:
    service: redis
